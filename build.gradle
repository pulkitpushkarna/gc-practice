apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

sourceCompatibility="1.8"
targetCompatibility="1.8"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {

    providedCompile 'javax.servlet:servlet-api:2.5', 'javax.servlet:jsp-api:2.0'
    compile 'org.thymeleaf:thymeleaf-spring4:3.0.0.RELEASE'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.0.RELEASE'
    compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.0.5'

    compile 'org.hibernate:hibernate-entitymanager:4.1.7.Final'
    compile 'mysql:mysql-connector-java:5.1.13'
    compile 'org.springframework.data:spring-data-jpa:1.11.4.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.8'

    compile 'org.springframework:spring-aspects:4.2.5.RELEASE'
    compile 'org.springframework:spring-webmvc:4.2.5.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.2.3.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.2.3.RELEASE'
    compile 'org.hibernate:hibernate-validator:4.2.0.Final'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.1'

    compile group: 'org.springframework.social', name: 'spring-social-security', version: '1.1.4.RELEASE'
    compile("org.springframework.social:spring-social-config:1.1.4.RELEASE")
    compile group: 'org.springframework.social', name: 'spring-social-web', version: '1.1.4.RELEASE'
    compile group: 'org.springframework.social', name: 'spring-social-google', version: '1.0.0.RELEASE'
    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.16'
    compile group: 'javax.mail', name: 'mail', version: '1.4'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.5.RELEASE'

//    def tomcatVersion = '7.0.57'
//    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
//            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
//            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

gretty {
    httpPort = 8080
    contextPath = '/'
}

//tomcatRun {
//    contextPath = ""
//    httpPort = 8080
//}

//task tomcatDebug {
//    // Create a new task tomcatDebug, add a description and add it to the same group as tomcatRun
//    description "Starting Tomcat with debugger enabled on port 5008."
//    group "web application"
//} << {
//
//    org.gradle.tooling.ProjectConnection conn = org.gradle.tooling.GradleConnector.newConnector()
//            .forProjectDirectory(new File("."))
//            .connect();
//
//    try {
//
//        org.gradle.tooling.model.build.BuildEnvironment env = conn.getModel(org.gradle.tooling.model.build.BuildEnvironment.class)
//        org.gradle.tooling.BuildLauncher build = conn.newBuild();
//
//        build.forTasks("tomcatRun")
//        // Enable debug via jvm arguments and append JVM arguments of the currently running vm (except -D).
//        build.setJvmArguments("-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5008", *env.java.jvmArguments)
//
//        // Run tomcatRun in the new JVM with debug parameters
//        build.run()
//
//    } finally {
//        conn.close();
//    }
//}

